{"ast":null,"code":"import _regeneratorRuntime from\"/Users/jgersch/CSU Classes/CS458 Spring 2021/Projects/CryptoZombiesGame2021/zombiedapp/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/jgersch/CSU Classes/CS458 Spring 2021/Projects/CryptoZombiesGame2021/zombiedapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/jgersch/CSU Classes/CS458 Spring 2021/Projects/CryptoZombiesGame2021/zombiedapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/jgersch/CSU Classes/CS458 Spring 2021/Projects/CryptoZombiesGame2021/zombiedapp/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/jgersch/CSU Classes/CS458 Spring 2021/Projects/CryptoZombiesGame2021/zombiedapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/jgersch/CSU Classes/CS458 Spring 2021/Projects/CryptoZombiesGame2021/zombiedapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/jgersch/CSU Classes/CS458 Spring 2021/Projects/CryptoZombiesGame2021/zombiedapp/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import{Card,Grid,Input,Segment,Pagination}from\"semantic-ui-react\";import{connect}from\"react-redux\";import ZombieCard from\"../components/zombieCard\";function mapStateToProps(state){return{CZ:state.CZ,userZombieCount:state.userZombieCount,userAddress:state.userAddress};}var MyZombieInventory=/*#__PURE__*/function(_Component){_inherits(MyZombieInventory,_Component);function MyZombieInventory(){var _getPrototypeOf2;var _this;_classCallCheck(this,MyZombieInventory);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(MyZombieInventory)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={ZombieTable:[],activePage:1,totalPages:Math.ceil(_this.props.userZombieCount/9)};_this.componentDidMount=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _this.makeZombieCards();case 2:case\"end\":return _context.stop();}}},_callee);}));_this.onChange=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e,pageInfo){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return _this.setState({activePage:pageInfo.activePage});case 2:_this.makeZombieCards();case 3:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x,_x2){return _ref2.apply(this,arguments);};}();_this.handleInputChange=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e,_ref4){var value;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:value=_ref4.value;_context3.next=3;return _this.setState({activePage:value});case 3:_this.makeZombieCards();case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3,_x4){return _ref3.apply(this,arguments);};}();_this.makeZombieCards=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var myZombies,zombieTable,i,z,zombie,myDate;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return _this.props.CZ.getZombiesByOwner(_this.props.userAddress);case 2:myZombies=_context4.sent;zombieTable=[];i=_this.state.activePage*9-9;case 5:if(!(i<_this.state.activePage*9)){_context4.next=21;break;}_context4.prev=6;z=myZombies[i];_context4.next=10;return _this.props.CZ.zombies(z);case 10:zombie=_context4.sent;myDate=new Date(zombie.readyTime*1000).toLocaleString();zombieTable.push(React.createElement(ZombieCard,{key:z,zombieId:z.toString(),zombieName:zombie.name,zombieDNA:zombie.dna.toString(),zombieLevel:zombie.level,zombieReadyTime:myDate,zombieWinCount:zombie.winCount,zombieLossCount:zombie.lossCount,zombieOwner:_this.props.userAddress,myOwner:true}));_context4.next=18;break;case 15:_context4.prev=15;_context4.t0=_context4[\"catch\"](6);return _context4.abrupt(\"break\",21);case 18:i++;_context4.next=5;break;case 21:_this.setState({zombieTable:zombieTable});case 22:case\"end\":return _context4.stop();}}},_callee4,null,[[6,15]]);}));return _this;}_createClass(MyZombieInventory,[{key:\"render\",value:function render(){return React.createElement(\"div\",null,React.createElement(\"hr\",null),React.createElement(\"h2\",null,\" Your Zombie Inventory \"),\"The zombies you own have a yellow background; clicking anywhere on a yellow card will bring up a list of actions you can perform.\",React.createElement(\"hr\",null),React.createElement(Grid,{columns:2,verticalAlign:\"middle\"},React.createElement(Grid.Column,null,React.createElement(Segment,{secondary:true},React.createElement(\"div\",null,\"activePage: \",this.state.activePage),React.createElement(Input,{min:1,max:this.state.totalPages,onChange:this.handleInputChange,type:\"range\",value:this.state.activePage}))),React.createElement(Grid.Column,null,React.createElement(Pagination,{activePage:this.state.activePage,onPageChange:this.onChange,totalPages:this.state.totalPages}))),React.createElement(\"br\",null),\" \",React.createElement(\"br\",null),React.createElement(Card.Group,null,\" \",this.state.zombieTable,\" \"));}}]);return MyZombieInventory;}(Component);export default connect(mapStateToProps)(MyZombieInventory);","map":{"version":3,"sources":["/Users/jgersch/CSU Classes/CS458 Spring 2021/Projects/CryptoZombiesGame2021/zombiedapp/src/pages/MyZombieInventory.js"],"names":["React","Component","Card","Grid","Input","Segment","Pagination","connect","ZombieCard","mapStateToProps","state","CZ","userZombieCount","userAddress","MyZombieInventory","ZombieTable","activePage","totalPages","Math","ceil","props","componentDidMount","makeZombieCards","onChange","e","pageInfo","setState","handleInputChange","value","getZombiesByOwner","myZombies","zombieTable","i","z","zombies","zombie","myDate","Date","readyTime","toLocaleString","push","toString","name","dna","level","winCount","lossCount"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, Grid, Input, Segment, Pagination } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport ZombieCard from \"../components/zombieCard\";\n\nfunction mapStateToProps(state) {\n  return {\n    CZ: state.CZ,\n    userZombieCount: state.userZombieCount,\n    userAddress: state.userAddress\n  };\n}\n\nclass MyZombieInventory extends Component {\n  state = {\n    ZombieTable: [],\n    activePage: 1,\n    totalPages: Math.ceil(this.props.userZombieCount / 9)\n  };\n\n  componentDidMount = async () => {\n    await this.makeZombieCards();\n  };\n\n  onChange = async (e, pageInfo) => {\n    await this.setState({ activePage: pageInfo.activePage });\n    this.makeZombieCards();\n  };\n\n  handleInputChange = async (e, { value }) => {\n    await this.setState({ activePage: value });\n    this.makeZombieCards();\n  };\n  makeZombieCards = async () => {\n    const myZombies = await this.props.CZ.getZombiesByOwner(this.props.userAddress);\n    let zombieTable = [];\n    for (\n      var i = this.state.activePage * 9 - 9;\n      i < this.state.activePage * 9;\n      i++\n    ) {\n      try {\n        let z = myZombies[i];\n        let zombie = await this.props.CZ.zombies(z);\n        let myDate = new Date(zombie.readyTime * 1000).toLocaleString();\n        zombieTable.push(\n          <ZombieCard\n            key={z}\n            zombieId={z.toString()}\n            zombieName={zombie.name}\n            zombieDNA={zombie.dna.toString()}\n            zombieLevel={zombie.level}\n            zombieReadyTime={myDate}\n            zombieWinCount={zombie.winCount}\n            zombieLossCount={zombie.lossCount}\n            zombieOwner={this.props.userAddress}\n            myOwner={true}\n          />\n        );\n      } catch {\n        break;\n      }\n    }\n    this.setState({ zombieTable });\n  };\n\n  render() {\n    return (\n      <div>\n        <hr />\n        <h2> Your Zombie Inventory </h2>\n        The zombies you own have a yellow background; clicking anywhere on a\n        yellow card will bring up a list of actions you can perform.\n        <hr />\n        <Grid columns={2} verticalAlign=\"middle\">\n          <Grid.Column>\n            <Segment secondary>\n              <div>activePage: {this.state.activePage}</div>\n              <Input\n                min={1}\n                max={this.state.totalPages}\n                onChange={this.handleInputChange}\n                type=\"range\"\n                value={this.state.activePage}\n              />\n            </Segment>\n          </Grid.Column>\n          <Grid.Column>\n            <Pagination\n              activePage={this.state.activePage}\n              onPageChange={this.onChange}\n              totalPages={this.state.totalPages}\n            />\n          </Grid.Column>\n        </Grid>\n        <br /> <br />\n        <Card.Group> {this.state.zombieTable} </Card.Group>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(MyZombieInventory);\n"]},"metadata":{},"sourceType":"module"}