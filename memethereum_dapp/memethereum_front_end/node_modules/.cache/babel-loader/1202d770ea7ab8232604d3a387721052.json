{"ast":null,"code":"var _jsxFileName = \"/Users/jgersch/CSU Classes/CS458 Spring 2021/Projects/CryptoZombiesGame2021/zombiedapp/src/pages/MyZombieInventory.js\";\nimport React, { Component } from \"react\";\nimport { Card, Grid, Input, Segment, Pagination } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport ZombieCard from \"../components/zombieCard\";\n\nfunction mapStateToProps(state) {\n  return {\n    CZ: state.CZ,\n    userZombieCount: state.userZombieCount,\n    userAddress: state.userAddress\n  };\n}\n\nclass MyZombieInventory extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ZombieTable: [],\n      activePage: 1,\n      totalPages: Math.ceil(this.props.userZombieCount / 9)\n    };\n\n    this.componentDidMount = async () => {\n      await this.makeZombieCards();\n    };\n\n    this.onChange = async (e, pageInfo) => {\n      await this.setState({\n        activePage: pageInfo.activePage\n      });\n      this.makeZombieCards();\n    };\n\n    this.handleInputChange = async (e, {\n      value\n    }) => {\n      await this.setState({\n        activePage: value\n      });\n      this.makeZombieCards();\n    };\n\n    this.makeZombieCards = async () => {\n      const myZombies = await this.props.CZ.getZombiesByOwner(this.props.userAddress);\n      let zombieTable = [];\n\n      for (var i = this.state.activePage * 9 - 9; i < this.state.activePage * 9; i++) {\n        try {\n          let z = myZombies[i];\n          let zombie = await this.props.CZ.zombies(z);\n          let myDate = new Date(zombie.readyTime * 1000).toLocaleString();\n          zombieTable.push(React.createElement(ZombieCard, {\n            key: z,\n            zombieId: z.toString(),\n            zombieName: zombie.name,\n            zombieDNA: zombie.dna.toString(),\n            zombieLevel: zombie.level,\n            zombieReadyTime: myDate,\n            zombieWinCount: zombie.winCount,\n            zombieLossCount: zombie.lossCount,\n            zombieOwner: this.props.userAddress,\n            myOwner: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }));\n        } catch {\n          break;\n        }\n      }\n\n      this.setState({\n        zombieTable\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \" Your Zombie Inventory \"), \"The zombies you own have a yellow background; clicking anywhere on a yellow card will bring up a list of actions you can perform.\", React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      columns: 2,\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      secondary: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"activePage: \", this.state.activePage), React.createElement(Input, {\n      min: 1,\n      max: this.state.totalPages,\n      onChange: this.handleInputChange,\n      type: \"range\",\n      value: this.state.activePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Pagination, {\n      activePage: this.state.activePage,\n      onPageChange: this.onChange,\n      totalPages: this.state.totalPages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(Card.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \" \", this.state.zombieTable, \" \"));\n  }\n\n}\n\nexport default connect(mapStateToProps)(MyZombieInventory);","map":{"version":3,"sources":["/Users/jgersch/CSU Classes/CS458 Spring 2021/Projects/CryptoZombiesGame2021/zombiedapp/src/pages/MyZombieInventory.js"],"names":["React","Component","Card","Grid","Input","Segment","Pagination","connect","ZombieCard","mapStateToProps","state","CZ","userZombieCount","userAddress","MyZombieInventory","ZombieTable","activePage","totalPages","Math","ceil","props","componentDidMount","makeZombieCards","onChange","e","pageInfo","setState","handleInputChange","value","myZombies","getZombiesByOwner","zombieTable","i","z","zombie","zombies","myDate","Date","readyTime","toLocaleString","push","toString","name","dna","level","winCount","lossCount","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, Grid, Input, Segment, Pagination } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport ZombieCard from \"../components/zombieCard\";\n\nfunction mapStateToProps(state) {\n  return {\n    CZ: state.CZ,\n    userZombieCount: state.userZombieCount,\n    userAddress: state.userAddress\n  };\n}\n\nclass MyZombieInventory extends Component {\n  state = {\n    ZombieTable: [],\n    activePage: 1,\n    totalPages: Math.ceil(this.props.userZombieCount / 9)\n  };\n\n  componentDidMount = async () => {\n    await this.makeZombieCards();\n  };\n\n  onChange = async (e, pageInfo) => {\n    await this.setState({ activePage: pageInfo.activePage });\n    this.makeZombieCards();\n  };\n\n  handleInputChange = async (e, { value }) => {\n    await this.setState({ activePage: value });\n    this.makeZombieCards();\n  };\n  makeZombieCards = async () => {\n    const myZombies = await this.props.CZ.getZombiesByOwner(this.props.userAddress);\n    let zombieTable = [];\n    for (\n      var i = this.state.activePage * 9 - 9;\n      i < this.state.activePage * 9;\n      i++\n    ) {\n      try {\n        let z = myZombies[i];\n        let zombie = await this.props.CZ.zombies(z);\n        let myDate = new Date(zombie.readyTime * 1000).toLocaleString();\n        zombieTable.push(\n          <ZombieCard\n            key={z}\n            zombieId={z.toString()}\n            zombieName={zombie.name}\n            zombieDNA={zombie.dna.toString()}\n            zombieLevel={zombie.level}\n            zombieReadyTime={myDate}\n            zombieWinCount={zombie.winCount}\n            zombieLossCount={zombie.lossCount}\n            zombieOwner={this.props.userAddress}\n            myOwner={true}\n          />\n        );\n      } catch {\n        break;\n      }\n    }\n    this.setState({ zombieTable });\n  };\n\n  render() {\n    return (\n      <div>\n        <hr />\n        <h2> Your Zombie Inventory </h2>\n        The zombies you own have a yellow background; clicking anywhere on a\n        yellow card will bring up a list of actions you can perform.\n        <hr />\n        <Grid columns={2} verticalAlign=\"middle\">\n          <Grid.Column>\n            <Segment secondary>\n              <div>activePage: {this.state.activePage}</div>\n              <Input\n                min={1}\n                max={this.state.totalPages}\n                onChange={this.handleInputChange}\n                type=\"range\"\n                value={this.state.activePage}\n              />\n            </Segment>\n          </Grid.Column>\n          <Grid.Column>\n            <Pagination\n              activePage={this.state.activePage}\n              onPageChange={this.onChange}\n              totalPages={this.state.totalPages}\n            />\n          </Grid.Column>\n        </Grid>\n        <br /> <br />\n        <Card.Group> {this.state.zombieTable} </Card.Group>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(MyZombieInventory);\n"]},"metadata":{},"sourceType":"module"}