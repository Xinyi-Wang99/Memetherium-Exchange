{"ast":null,"code":"import _regeneratorRuntime from\"/Users/jgersch/CSU Classes/CS458 Spring 2021/Projects/CryptoZombiesGame2021/zombiedapp/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/jgersch/CSU Classes/CS458 Spring 2021/Projects/CryptoZombiesGame2021/zombiedapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import store from\"../redux/store\";export var ZOMBIE_COUNT=\"ZOMBIE_COUNT\";// action type\n// action creator (dispatch sends this to redux reducer)\nfunction zombieCount(data){return{type:ZOMBIE_COUNT,payload:data};}//\n//  set up the blockchain shadow contract, user address, and user zombie count.  Put into redux store.\n//\nfunction getZombieCount(_x,_x2){return _getZombieCount.apply(this,arguments);}function _getZombieCount(){_getZombieCount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(CZ,userAddress){var userZombieCount,high,low,middle,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return CZ.balanceOf(userAddress);case 2:userZombieCount=+_context.sent;// + convert a string to an integer\n// do a binary search to estimate total zombie count.\n// It is a real shame that the Cryptozombies contract doesn't totally comply with ERC720 to include a function\n// that returns totalZombieount.\nhigh=8192;low=0;middle=4096;case 6:if(!(low<high)){_context.next=20;break;}_context.prev=7;_context.next=10;return CZ.zombies(middle);case 10:low=middle+1;middle=Math.floor(low+(high-low)/2);_context.next=18;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](7);high=middle-1;middle=Math.floor(low+(high-low)/2);case 18:_context.next=6;break;case 20:// put state data into the REDUX store for easy access from other pages and components\ndata={totalZombieCount:Math.max(low-1,1),// from binary search\nuserZombieCount:userZombieCount//EC7 shorthand for totalZombieCount:totalZombieCount because of same variable name\n};store.dispatch(zombieCount(data));case 22:case\"end\":return _context.stop();}}},_callee,null,[[7,14]]);}));return _getZombieCount.apply(this,arguments);}export default getZombieCount;","map":{"version":3,"sources":["/Users/jgersch/CSU Classes/CS458 Spring 2021/Projects/CryptoZombiesGame2021/zombiedapp/src/utils/getZombieCount.js"],"names":["store","ZOMBIE_COUNT","zombieCount","data","type","payload","getZombieCount","CZ","userAddress","balanceOf","userZombieCount","high","low","middle","zombies","Math","floor","totalZombieCount","max","dispatch"],"mappings":"+UAAA,MAAOA,CAAAA,KAAP,KAAkB,gBAAlB,CAEA,MAAO,IAAMC,CAAAA,YAAY,CAAG,cAArB,CAAqC;AAE5C;AACA,QAASC,CAAAA,WAAT,CAAqBC,IAArB,CAA2B,CACzB,MAAO,CACLC,IAAI,CAAEH,YADD,CAELI,OAAO,CAAEF,IAFJ,CAAP,CAID,CAED;AACA;AACA;QAEeG,CAAAA,c,0JAAf,iBAA8BC,EAA9B,CAAkCC,WAAlC,iLAEgCD,CAAAA,EAAE,CAACE,SAAH,CAAaD,WAAb,CAFhC,QAEME,eAFN,gBAE6D;AAE3D;AACA;AACA;AAEIC,IARN,CAQa,IARb,CASMC,GATN,CASY,CATZ,CAUMC,MAVN,CAUe,IAVf,aAYSD,GAAG,CAAGD,IAZf,kEAcYJ,CAAAA,EAAE,CAACO,OAAH,CAAWD,MAAX,CAdZ,SAeMD,GAAG,CAAGC,MAAM,CAAG,CAAf,CACAA,MAAM,CAAGE,IAAI,CAACC,KAAL,CAAWJ,GAAG,CAAG,CAACD,IAAI,CAAGC,GAAR,EAAe,CAAhC,CAAT,CAhBN,iFAkBMD,IAAI,CAAGE,MAAM,CAAG,CAAhB,CACAA,MAAM,CAAGE,IAAI,CAACC,KAAL,CAAWJ,GAAG,CAAG,CAACD,IAAI,CAAGC,GAAR,EAAe,CAAhC,CAAT,CAnBN,sCAuBE;AAEIT,IAzBN,CAyBa,CACTc,gBAAgB,CAAEF,IAAI,CAACG,GAAL,CAASN,GAAG,CAAC,CAAb,CAAgB,CAAhB,CADT,CAC+B;AACxCF,eAAe,CAAfA,eAAyB;AAFhB,CAzBb,CA8BEV,KAAK,CAACmB,QAAN,CAAejB,WAAW,CAACC,IAAD,CAA1B,EA9BF,qE,iDAiCA,cAAeG,CAAAA,cAAf","sourcesContent":["import store from \"../redux/store\";\n\nexport const ZOMBIE_COUNT = \"ZOMBIE_COUNT\"; // action type\n\n// action creator (dispatch sends this to redux reducer)\nfunction zombieCount(data) {\n  return {\n    type: ZOMBIE_COUNT,\n    payload: data\n  };\n}\n\n//\n//  set up the blockchain shadow contract, user address, and user zombie count.  Put into redux store.\n//\n\nasync function getZombieCount(CZ, userAddress) {\n  // get number of zombies owned by the user account\n  let userZombieCount = +(await CZ.balanceOf(userAddress));  // + convert a string to an integer\n\n  // do a binary search to estimate total zombie count.\n  // It is a real shame that the Cryptozombies contract doesn't totally comply with ERC720 to include a function\n  // that returns totalZombieount.\n\n  var high = 8192;\n  var low = 0;\n  var middle = 4096;\n\n  while (low < high) {\n      try {\n      await CZ.zombies(middle);\n      low = middle + 1;\n      middle = Math.floor(low + (high - low) / 2);\n    } catch {\n      high = middle - 1;\n      middle = Math.floor(low + (high - low) / 2);\n    }\n  }\n\n  // put state data into the REDUX store for easy access from other pages and components\n\n  let data = {\n    totalZombieCount: Math.max(low-1, 1),   // from binary search\n    userZombieCount          //EC7 shorthand for totalZombieCount:totalZombieCount because of same variable name\n  };\n\n  store.dispatch(zombieCount(data));\n}\n\nexport default getZombieCount;\n"]},"metadata":{},"sourceType":"module"}