{"ast":null,"code":"import _regeneratorRuntime from\"/Users/jgersch/CSU Classes/CS458 Spring 2021/Projects/CryptoZombiesGame2021/zombiedapp/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/jgersch/CSU Classes/CS458 Spring 2021/Projects/CryptoZombiesGame2021/zombiedapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/jgersch/CSU Classes/CS458 Spring 2021/Projects/CryptoZombiesGame2021/zombiedapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/jgersch/CSU Classes/CS458 Spring 2021/Projects/CryptoZombiesGame2021/zombiedapp/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/jgersch/CSU Classes/CS458 Spring 2021/Projects/CryptoZombiesGame2021/zombiedapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/jgersch/CSU Classes/CS458 Spring 2021/Projects/CryptoZombiesGame2021/zombiedapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/jgersch/CSU Classes/CS458 Spring 2021/Projects/CryptoZombiesGame2021/zombiedapp/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import initBlockchain from\"./utils/initBlockchain\";import getZombieCount from\"./utils/getZombieCount\";import{HashRouter,Route}from\"react-router-dom\";import{Container}from\"semantic-ui-react\";import{Provider}from\"react-redux\";import TopBar from\"./components/TopBar\";import Greeting from\"./pages/Greeting\";import MyZombieInventory from\"./pages/MyZombieInventory\";import ZombieInventory from\"./pages/ZombieInventory\";import AttackZombie from\"./pages/AttackZombie\";import FeedOnKitty from\"./pages/FeedOnKitty\";import ChangeName from\"./pages/ChangeName\";import LevelUp from\"./pages/LevelUp\";import TransferZombie from\"./pages/TransferZombie\";import store from\"./redux/store\";//\n//  This is the main application page; routing is handled to render other pages in the application\nvar App=/*#__PURE__*/function(_Component){_inherits(App,_Component);function App(){var _getPrototypeOf2;var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(App)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.componentDidMount=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var CZInfo;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return initBlockchain();case 3:CZInfo=_context.sent;_context.next=6;return getZombieCount(CZInfo.CZ,CZInfo.userAddress);case 6:_context.next=12;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);// Catch any errors for any of the above operations.\nalert(\"Failed to load provider, signer, or contract. Check console for details.\");console.log(_context.t0);case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}));return _this;}_createClass(App,[{key:\"render\",// **************************************************************************\n//\n// main render routine for App component;\n//      contains route info to navigate between pages\n//\n// **************************************************************************\nvalue:function render(){return React.createElement(Provider,{store:store},React.createElement(HashRouter,null,React.createElement(Container,null,React.createElement(TopBar,{state:this.state}),React.createElement(\"div\",null,React.createElement(Route,{exact:true,path:\"/\",component:Greeting}),React.createElement(Route,{exact:true,path:\"/myZombieInventory\",component:MyZombieInventory}),React.createElement(Route,{exact:true,path:\"/ZombieInventory\",component:ZombieInventory}),React.createElement(Route,{exact:true,path:\"/AttackZombie\",component:AttackZombie}),React.createElement(Route,{exact:true,path:\"/FeedOnKitty\",component:FeedOnKitty}),React.createElement(Route,{exact:true,path:\"/ChangeName\",component:ChangeName}),React.createElement(Route,{exact:true,path:\"/LevelUp\",component:LevelUp}),React.createElement(Route,{exact:true,path:\"/TransferZombie\",component:TransferZombie})))));}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["/Users/jgersch/CSU Classes/CS458 Spring 2021/Projects/CryptoZombiesGame2021/zombiedapp/src/App.js"],"names":["React","Component","initBlockchain","getZombieCount","HashRouter","Route","Container","Provider","TopBar","Greeting","MyZombieInventory","ZombieInventory","AttackZombie","FeedOnKitty","ChangeName","LevelUp","TransferZombie","store","App","componentDidMount","CZInfo","CZ","userAddress","alert","console","log","state"],"mappings":"0qCAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,cAAP,KAA2B,wBAA3B,CACA,MAAOC,CAAAA,cAAP,KAA2B,wBAA3B,CAEA,OAASC,UAAT,CAAqBC,KAArB,KAAkC,kBAAlC,CACA,OAASC,SAAT,KAA0B,mBAA1B,CACA,OAASC,QAAT,KAAyB,aAAzB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CAEA,MAAOC,CAAAA,QAAP,KAAqB,kBAArB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,2BAA9B,CACA,MAAOC,CAAAA,eAAP,KAA4B,yBAA5B,CACA,MAAOC,CAAAA,YAAP,KAAyB,sBAAzB,CACA,MAAOC,CAAAA,WAAP,KAAwB,qBAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,oBAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,iBAApB,CACA,MAAOC,CAAAA,cAAP,KAA2B,wBAA3B,CAEA,MAAOC,CAAAA,KAAP,KAAkB,eAAlB,CAEA;AACA;GAEMC,CAAAA,G,mXAWFC,iB,sEAAoB,oLAEOjB,CAAAA,cAAc,EAFrB,QAERkB,MAFQ,qCAGRjB,CAAAA,cAAc,CAACiB,MAAM,CAACC,EAAR,CAAYD,MAAM,CAACE,WAAnB,CAHN,uFAKd;AACAC,KAAK,4EAAL,CACAC,OAAO,CAACC,GAAR,cAPc,oE,iDAetB;AACA;AACA;AACA;AACA;AACA;uBAES,CACP,MACE,qBAAC,QAAD,EAAU,KAAK,CAAER,KAAjB,EACE,oBAAC,UAAD,MACE,oBAAC,SAAD,MACE,oBAAC,MAAD,EAAQ,KAAK,CAAE,KAAKS,KAApB,EADF,CAEE,+BACE,oBAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,GAAlB,CAAsB,SAAS,CAAEjB,QAAjC,EADF,CAEE,oBAAC,KAAD,EACE,KAAK,KADP,CAEE,IAAI,CAAC,oBAFP,CAGE,SAAS,CAAEC,iBAHb,EAFF,CAOE,oBAAC,KAAD,EACE,KAAK,KADP,CAEE,IAAI,CAAC,kBAFP,CAGE,SAAS,CAAEC,eAHb,EAPF,CAaE,oBAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,eAAlB,CAAkC,SAAS,CAAEC,YAA7C,EAbF,CAcE,oBAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,cAAlB,CAAiC,SAAS,CAAEC,WAA5C,EAdF,CAeE,oBAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,aAAlB,CAAgC,SAAS,CAAEC,UAA3C,EAfF,CAgBE,oBAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,UAAlB,CAA6B,SAAS,CAAEC,OAAxC,EAhBF,CAiBE,oBAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,iBAAlB,CAAoC,SAAS,CAAEC,cAA/C,EAjBF,CAFF,CADF,CADF,CADF,CA4BD,C,iBA9Def,S,EAiElB,cAAeiB,CAAAA,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport initBlockchain from \"./utils/initBlockchain\";\nimport getZombieCount from \"./utils/getZombieCount\";\n\nimport { HashRouter, Route } from \"react-router-dom\";\nimport { Container } from \"semantic-ui-react\";\nimport { Provider } from \"react-redux\";\n\nimport TopBar from \"./components/TopBar\";\n\nimport Greeting from \"./pages/Greeting\";\nimport MyZombieInventory from \"./pages/MyZombieInventory\";\nimport ZombieInventory from \"./pages/ZombieInventory\";\nimport AttackZombie from \"./pages/AttackZombie\";\nimport FeedOnKitty from \"./pages/FeedOnKitty\";\nimport ChangeName from \"./pages/ChangeName\";\nimport LevelUp from \"./pages/LevelUp\";\nimport TransferZombie from \"./pages/TransferZombie\";\n\nimport store from \"./redux/store\";\n\n//\n//  This is the main application page; routing is handled to render other pages in the application\n\nclass App extends Component {\n  // define a state variable for important connectivity data to the blockchain\n  // this will then be put into the REDUX store for retrieval by other pages\n\n  // **************************************************************************\n  //\n  // React will call this routine only once when App page loads; do initialization here\n  //\n  // **************************************************************************\n\n\n    componentDidMount = async () => {\n      try {\n          const CZInfo = await initBlockchain(); // from utils directory;  connect to provider and to metamask or other signer\n          await getZombieCount(CZInfo.CZ, CZInfo.userAddress); // get user count and total count of zombies\n      } catch (error) {\n          // Catch any errors for any of the above operations.\n          alert(`Failed to load provider, signer, or contract. Check console for details.`);\n          console.log(error);\n      }\n    };\n\n\n\n\n\n  // **************************************************************************\n  //\n  // main render routine for App component;\n  //      contains route info to navigate between pages\n  //\n  // **************************************************************************\n\n  render() {\n    return (\n      <Provider store={store}>\n        <HashRouter>\n          <Container>\n            <TopBar state={this.state} />\n            <div>\n              <Route exact path=\"/\" component={Greeting} />\n              <Route\n                exact\n                path=\"/myZombieInventory\"\n                component={MyZombieInventory}\n              />\n              <Route\n                exact\n                path=\"/ZombieInventory\"\n                component={ZombieInventory}\n              />\n              {/* routes used in zombie action modal */}\n              <Route exact path=\"/AttackZombie\" component={AttackZombie} />\n              <Route exact path=\"/FeedOnKitty\" component={FeedOnKitty} />\n              <Route exact path=\"/ChangeName\" component={ChangeName} />\n              <Route exact path=\"/LevelUp\" component={LevelUp} />\n              <Route exact path=\"/TransferZombie\" component={TransferZombie} />\n            </div>\n          </Container>\n        </HashRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}