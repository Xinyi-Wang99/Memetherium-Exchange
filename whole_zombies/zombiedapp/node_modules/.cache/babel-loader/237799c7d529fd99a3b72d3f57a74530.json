{"ast":null,"code":"var _jsxFileName = \"/Users/jgersch/CSU Classes/CS458 Spring 2021/Projects/CryptoZombiesGame2021/zombiedapp/src/components/CreateZombie.js\";\nimport React, { Component } from \"react\";\nimport getZombieCount from \"../utils/getZombieCount\";\nimport { connect } from \"react-redux\";\nimport { Button, Header, Icon, Modal, Form, Message } from \"semantic-ui-react\";\n\nfunction mapStateToProps(state) {\n  return {\n    CZ: state.CZ,\n    userAddress: state.userAddress,\n    userZombieCount: state.userZombieCount\n  };\n} // Create a new Zombie\n\n\nclass CreateZombie extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modalOpen: false,\n      value: \"\",\n      message: \"\",\n      errorMessage: \"\",\n      loading: false\n    };\n\n    this.handleOpen = () => this.setState({\n      modalOpen: true\n    });\n\n    this.handleClose = () => this.setState({\n      modalOpen: false\n    });\n\n    this.onSubmit = async event => {\n      event.preventDefault();\n      this.setState({\n        loading: true,\n        errorMessage: \"\",\n        message: \"waiting for blockchain transaction to complete...\"\n      });\n\n      try {\n        await this.props.CZ.createRandomZombie(this.state.value); // contains the zombie name\n\n        this.setState({\n          loading: false,\n          message: \"You have created a New Zombie\"\n        });\n        getZombieCount(this.props.CZ, this.props.userAddress);\n      } catch (err) {\n        this.setState({\n          loading: false,\n          errorMessage: err.message,\n          message: \"User rejected transaction or else this account is already in use, please try another name.\"\n        });\n      }\n    };\n  }\n\n  render() {\n    let createDisabled = this.props.userZombieCount !== 0;\n    return React.createElement(Modal, {\n      trigger: React.createElement(Button, {\n        primary: true,\n        disabled: createDisabled,\n        onClick: this.handleOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Create Zombie\"),\n      open: this.state.modalOpen,\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Header, {\n      icon: \"browser\",\n      content: \"Create a New Zombie\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Modal.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"static/images/zombieWarrior.jpg\",\n      alt: \"zombie warrior\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Be sure to give your zombie a WORTHY name!!!\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      error: !!this.state.errorMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Zombie Name\"), React.createElement(\"input\", {\n      placeholder: \"Name\",\n      onChange: event => this.setState({\n        value: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(Message, {\n      error: true,\n      header: \"Oops!\",\n      content: this.state.errorMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(Button, {\n      primary: true,\n      type: \"submit\",\n      loading: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"check\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), \"Create Zombie\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.state.message))), React.createElement(Modal.Actions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"red\",\n      onClick: this.handleClose,\n      inverted: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"cancel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), \" Close\")));\n  }\n\n}\n\nexport default connect(mapStateToProps)(CreateZombie);","map":{"version":3,"sources":["/Users/jgersch/CSU Classes/CS458 Spring 2021/Projects/CryptoZombiesGame2021/zombiedapp/src/components/CreateZombie.js"],"names":["React","Component","getZombieCount","connect","Button","Header","Icon","Modal","Form","Message","mapStateToProps","state","CZ","userAddress","userZombieCount","CreateZombie","modalOpen","value","message","errorMessage","loading","handleOpen","setState","handleClose","onSubmit","event","preventDefault","props","createRandomZombie","err","render","createDisabled","target"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport getZombieCount from \"../utils/getZombieCount\";\nimport { connect } from \"react-redux\";\n\nimport { Button, Header, Icon, Modal, Form, Message } from \"semantic-ui-react\";\n\nfunction mapStateToProps(state) {\n    return {\n        CZ: state.CZ,\n        userAddress: state.userAddress,\n        userZombieCount: state.userZombieCount\n    };\n}\n\n\n// Create a new Zombie\n\nclass CreateZombie extends Component {\n  state = {\n    modalOpen: false,\n    value: \"\",\n    message: \"\",\n    errorMessage: \"\",\n    loading: false\n  };\n\n  handleOpen = () => this.setState({ modalOpen: true });\n\n  handleClose = () => this.setState({ modalOpen: false });\n\n  onSubmit = async event => {\n    event.preventDefault();\n    this.setState({\n      loading: true,\n      errorMessage: \"\",\n      message: \"waiting for blockchain transaction to complete...\"\n    });\n    try {\n      await this.props.CZ.createRandomZombie(this.state.value) // contains the zombie name\n      this.setState({\n        loading: false,\n        message: \"You have created a New Zombie\"\n      });\n      getZombieCount(this.props.CZ, this.props.userAddress);\n    } catch (err) {\n      this.setState({\n        loading: false,\n        errorMessage: err.message,\n        message: \"User rejected transaction or else this account is already in use, please try another name.\"\n      });\n    }\n  };\n\n\n  render() {\n    let createDisabled = (this.props.userZombieCount !== 0);\n      return (\n      <Modal\n        trigger={\n          <Button primary disabled={createDisabled} onClick={this.handleOpen}>\n            Create Zombie\n          </Button>\n        }\n        open={this.state.modalOpen}\n        onClose={this.handleClose}\n      >\n        <Header icon=\"browser\" content=\"Create a New Zombie\" />\n        <Modal.Content>\n          <img src=\"static/images/zombieWarrior.jpg\" alt=\"zombie warrior\" /><Header>Be sure to give your zombie a WORTHY name!!!</Header>\n          <br /> <br />\n          <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n            <Form.Field>\n              <label>Zombie Name</label>\n              <input\n                placeholder=\"Name\"\n                onChange={event =>\n                  this.setState({\n                    value: event.target.value\n                  })\n                }\n              />\n            </Form.Field>\n            <Message error header=\"Oops!\" content={this.state.errorMessage} />\n            <Button primary type=\"submit\" loading={this.state.loading}>\n              <Icon name=\"check\" />\n              Create Zombie\n            </Button>\n            <hr />\n            <h2>{this.state.message}</h2>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button color=\"red\" onClick={this.handleClose} inverted>\n            <Icon name=\"cancel\" /> Close\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(CreateZombie);"]},"metadata":{},"sourceType":"module"}