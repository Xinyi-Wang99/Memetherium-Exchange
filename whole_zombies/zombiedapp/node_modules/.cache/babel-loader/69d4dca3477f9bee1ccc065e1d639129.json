{"ast":null,"code":"import _regeneratorRuntime from\"/Users/jgersch/CSU Classes/CS458 Spring 2021/Projects/CryptoZombiesGame2021/zombiedapp/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/jgersch/CSU Classes/CS458 Spring 2021/Projects/CryptoZombiesGame2021/zombiedapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/jgersch/CSU Classes/CS458 Spring 2021/Projects/CryptoZombiesGame2021/zombiedapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/jgersch/CSU Classes/CS458 Spring 2021/Projects/CryptoZombiesGame2021/zombiedapp/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/jgersch/CSU Classes/CS458 Spring 2021/Projects/CryptoZombiesGame2021/zombiedapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/jgersch/CSU Classes/CS458 Spring 2021/Projects/CryptoZombiesGame2021/zombiedapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/jgersch/CSU Classes/CS458 Spring 2021/Projects/CryptoZombiesGame2021/zombiedapp/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import getZombieCount from\"../utils/getZombieCount\";import{connect}from\"react-redux\";import{Button,Header,Icon,Modal,Form,Message}from\"semantic-ui-react\";function mapStateToProps(state){return{CZ:state.CZ,userAddress:state.userAddress,userZombieCount:state.userZombieCount};}// Create a new Zombie\nvar CreateZombie=/*#__PURE__*/function(_Component){_inherits(CreateZombie,_Component);function CreateZombie(){var _getPrototypeOf2;var _this;_classCallCheck(this,CreateZombie);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(CreateZombie)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={modalOpen:false,value:\"\",message:\"\",errorMessage:\"\",loading:false};_this.handleOpen=function(){return _this.setState({modalOpen:true});};_this.handleClose=function(){return _this.setState({modalOpen:false});};_this.onSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();_this.setState({loading:true,errorMessage:\"\",message:\"waiting for blockchain transaction to complete...\"});_context.prev=2;_context.next=5;return _this.props.CZ.createRandomZombie(_this.state.value);case 5:// contains the zombie name\n_this.setState({loading:false,message:\"You have created a New Zombie\"});getZombieCount(_this.props.CZ,_this.props.userAddress);_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](2);_this.setState({loading:false,errorMessage:_context.t0.message,message:\"User rejected transaction or else this account is already in use, please try another name.\"});case 12:case\"end\":return _context.stop();}}},_callee,null,[[2,9]]);}));return function(_x){return _ref.apply(this,arguments);};}();return _this;}_createClass(CreateZombie,[{key:\"render\",value:function render(){var _this2=this;var createDisabled=this.props.userZombieCount!==0;return React.createElement(Modal,{trigger:React.createElement(Button,{primary:true,disabled:createDisabled,onClick:this.handleOpen},\"Create Zombie\"),open:this.state.modalOpen,onClose:this.handleClose},React.createElement(Header,{icon:\"browser\",content:\"Create a New Zombie\"}),React.createElement(Modal.Content,null,React.createElement(\"img\",{src:\"static/images/zombieWarrior.jpg\",alt:\"zombie warrior\"}),React.createElement(Header,null,\"Be sure to give your zombie a WORTHY name!!!\"),React.createElement(\"br\",null),\" \",React.createElement(\"br\",null),React.createElement(Form,{onSubmit:this.onSubmit,error:!!this.state.errorMessage},React.createElement(Form.Field,null,React.createElement(\"label\",null,\"Zombie Name\"),React.createElement(\"input\",{placeholder:\"Name\",onChange:function onChange(event){return _this2.setState({value:event.target.value});}})),React.createElement(Message,{error:true,header:\"Oops!\",content:this.state.errorMessage}),React.createElement(Button,{primary:true,type:\"submit\",loading:this.state.loading},React.createElement(Icon,{name:\"check\"}),\"Create Zombie\"),React.createElement(\"hr\",null),React.createElement(\"h2\",null,this.state.message))),React.createElement(Modal.Actions,null,React.createElement(Button,{color:\"red\",onClick:this.handleClose,inverted:true},React.createElement(Icon,{name:\"cancel\"}),\" Close\")));}}]);return CreateZombie;}(Component);export default connect(mapStateToProps)(CreateZombie);","map":{"version":3,"sources":["/Users/jgersch/CSU Classes/CS458 Spring 2021/Projects/CryptoZombiesGame2021/zombiedapp/src/components/CreateZombie.js"],"names":["React","Component","getZombieCount","connect","Button","Header","Icon","Modal","Form","Message","mapStateToProps","state","CZ","userAddress","userZombieCount","CreateZombie","modalOpen","value","message","errorMessage","loading","handleOpen","setState","handleClose","onSubmit","event","preventDefault","props","createRandomZombie","createDisabled","target"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport getZombieCount from \"../utils/getZombieCount\";\nimport { connect } from \"react-redux\";\n\nimport { Button, Header, Icon, Modal, Form, Message } from \"semantic-ui-react\";\n\nfunction mapStateToProps(state) {\n    return {\n        CZ: state.CZ,\n        userAddress: state.userAddress,\n        userZombieCount: state.userZombieCount\n    };\n}\n\n\n// Create a new Zombie\n\nclass CreateZombie extends Component {\n  state = {\n    modalOpen: false,\n    value: \"\",\n    message: \"\",\n    errorMessage: \"\",\n    loading: false\n  };\n\n  handleOpen = () => this.setState({ modalOpen: true });\n\n  handleClose = () => this.setState({ modalOpen: false });\n\n  onSubmit = async event => {\n    event.preventDefault();\n    this.setState({\n      loading: true,\n      errorMessage: \"\",\n      message: \"waiting for blockchain transaction to complete...\"\n    });\n    try {\n      await this.props.CZ.createRandomZombie(this.state.value) // contains the zombie name\n      this.setState({\n        loading: false,\n        message: \"You have created a New Zombie\"\n      });\n      getZombieCount(this.props.CZ, this.props.userAddress);\n    } catch (err) {\n      this.setState({\n        loading: false,\n        errorMessage: err.message,\n        message: \"User rejected transaction or else this account is already in use, please try another name.\"\n      });\n    }\n  };\n\n\n  render() {\n    let createDisabled = (this.props.userZombieCount !== 0);\n      return (\n      <Modal\n        trigger={\n          <Button primary disabled={createDisabled} onClick={this.handleOpen}>\n            Create Zombie\n          </Button>\n        }\n        open={this.state.modalOpen}\n        onClose={this.handleClose}\n      >\n        <Header icon=\"browser\" content=\"Create a New Zombie\" />\n        <Modal.Content>\n          <img src=\"static/images/zombieWarrior.jpg\" alt=\"zombie warrior\" /><Header>Be sure to give your zombie a WORTHY name!!!</Header>\n          <br /> <br />\n          <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n            <Form.Field>\n              <label>Zombie Name</label>\n              <input\n                placeholder=\"Name\"\n                onChange={event =>\n                  this.setState({\n                    value: event.target.value\n                  })\n                }\n              />\n            </Form.Field>\n            <Message error header=\"Oops!\" content={this.state.errorMessage} />\n            <Button primary type=\"submit\" loading={this.state.loading}>\n              <Icon name=\"check\" />\n              Create Zombie\n            </Button>\n            <hr />\n            <h2>{this.state.message}</h2>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button color=\"red\" onClick={this.handleClose} inverted>\n            <Icon name=\"cancel\" /> Close\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(CreateZombie);"]},"metadata":{},"sourceType":"module"}